<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 技术学习 | Peaceful Revolution]]></title>
  <link href="http://wiserfirst.github.com/blog/categories/技术学习/atom.xml" rel="self"/>
  <link href="http://wiserfirst.github.com/"/>
  <updated>2013-02-05T17:46:19+08:00</updated>
  <id>http://wiserfirst.github.com/</id>
  <author>
    <name><![CDATA[wiser]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[使用VPS做SSH代理]]></title>
    <link href="http://wiserfirst.github.com/blog/2010/12/29/e4bdbfe794a8vpse5819asshe4bba3e79086/"/>
    <updated>2010-12-29T22:50:37+08:00</updated>
    <id>http://wiserfirst.github.com/blog/2010/12/29/e4bdbfe794a8vpse5819asshe4bba3e79086</id>
    <content type="html"><![CDATA[<p>首先登录到VPS并切换到root帐号（也可以使用sudo命令），然后使用如下命令建立新帐户，专门用于SSH代理：</p>

<blockquote><p>useradd -M -s /sbin/nologin -n username</p></blockquote>

<p>然后为该用户设置密码:</p>

<blockquote><p>passwd username</p></blockquote>

<p>接着根据提示输入两遍这个用户的密码即可。（参考了这篇文章《<a href="http://www.zhukun.net/archives/4504">在VPS上建立最低权限的SSH帐号用于代理服务</a>》）
若要删除这个用户，运行如下命令:</p>

<blockquote><p>userdel username</p></blockquote>

<p>为了保证用户名和密码的安全性，我使用了一个国外网站上的在线工具生成随机字符串作为用户名和密码，地址在<a href="http://www.pctools.com/guides/password/?length=12&amp;phonetic=on&amp;alpha=on&amp;mixedcase=on&amp;numeric=on&amp;punctuation=on&amp;nosimilar=on&amp;quantity=1&amp;generate=true#password_generator">这里</a>。可以指定包含字符的类别和串的长度，个人认为挺好用的，回头有时间自己写一个。
密码设好以后，Server配置就完成了，接下来做Client配置。在Windows下可以使用Bitvise Tunnelier，点<a href="http://dl.bitvise.com/Tunnelier-Inst.exe">这里下载</a>，其配置实用参考了<a href="http://www.vpsmm.com/edu/ssh-sockt-5-fuck-g-f-w.html">这篇文章</a>。
下载安装Tunnelier软件后，首先在Login页面中输入VPS地址及其SSH端口，以及刚刚设置的用户名和密码。在Options页面的On Login下取消选中Open Terminal和Open SFTP，这样使用这个帐户登录时就不会自动打开Terminal和SFTP窗口。其实这里即使不取消也是登录不上去的，因为这个帐户权限不够。最后在Service页面选中SOCKS/HTTP Proxy Forwarding下面的Enable，并在Listen Port中设置一个你想使用的端口号，如4567。这样本地代理的配置就完成了。
想要通过这个代理上网只需要在浏览器中，设置代理地址为127.0.0.1:4567即可。当然如果你使用Firefox并且安装了Autoproxy插件，还可以根据网址无缝切换翻墙与否，十分方便。只需在Autoproxy插件的配置中将SSH -D方式后面的端口号改为4567，并选择使用SSH -D即可。关于详细的设置请自行Google之。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Wordpress用户密码修改]]></title>
    <link href="http://wiserfirst.github.com/blog/2010/12/23/wordpresse794a8e688b7e5af86e7a081e4bfaee694b9/"/>
    <updated>2010-12-23T18:07:57+08:00</updated>
    <id>http://wiserfirst.github.com/blog/2010/12/23/wordpresse794a8e688b7e5af86e7a081e4bfaee694b9</id>
    <content type="html"><![CDATA[<p>首先参考这篇文章<a href="http://www.williamlong.info/archives/1978.html">《WordPress用户密码算法规则》</a>，可了解其密码设置保存的规则。 可以通过如下步骤进行密码修改：</p>

<p>1 计算要设置密码的MD5值。 到<a href="http://www.joeswebtools.com/security/md5-hash-generator/">这里</a>，输入密码字符串，点击“Generate MD5”，得到密码的MD5值。例如要设密码为“Hello_world!”，计算出的MD5为“8522b5c3cab95bebdc2b35836207a902”</p>

<p>2 使用phpMyAdmin登录MySQL数据库，查看Wordpress使用的数据库（这个是在安装LNMP时自己命名的）中存放users的表（通常是wp_users），在对应用户的那一行点击Edit，即那个铅笔按钮，然后将密码字段（我这里是user_pass）的值改为刚刚得到的MD5值，最后点击GO。</p>

<p>这个操作相当于运行了如下的SQL语句：</p>

<blockquote><p>UPDATE <code>your_dbname</code>.<code>wp_users</code> SET <code>user_pass</code> = '8522b5c3cab95bebdc2b35836207a902' WHERE <code>wp_users</code>.<code>ID</code> =1;</p></blockquote>

<p>如果足够熟悉的话也可以自己写SQL语句来执行，对上面语句稍做修改：</p>

<blockquote><p>UPDATE <code>your_dbname</code>.<code>wp_users</code> SET <code>user_pass</code> = '8522b5c3cab95bebdc2b35836207a902' WHERE <code>wp_users</code>.<code>user_login</code> =‘your_username’;</p></blockquote>

<p>注意，其中的your_dbname和your_username要替换成你的数据库名和用户名。这样写的好处是不用去查用户名对应的ID。 到这里就已经完成了密码的修改，正如月光老师所说，我们写进去的是密码的MD5值，下次使用这个密码登录后，Wordpress会将其修改为更加安全的形式。</p>
]]></content>
  </entry>
  
</feed>
